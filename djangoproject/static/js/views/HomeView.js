// Generated by CoffeeScript 1.3.3
var errorCallback, successCallback,
  _this = this;

window.WiserWater.HomeView = Backbone.View.extend({
  initialize: function(options) {
    this.template = _.template(WiserWater.tpl.get('home'));
    this.userLakes = new window.WiserWater.UserLakeCollection({
      userId: 11
    });
    this.userNews = new window.WiserWater.UserNewsCollection({
      userId: 11
    });
    this.allLakes = new window.WiserWater.LakeCollection();
    return this;
  },
  events: {
    "click .lakeId": "onLakeClick"
  },
  render: function() {
    var self;
    self = this;
    $(this.el).html(this.template());
    this.userLakes.fetch({
      success: function(fetchedUserLakes) {
        self.userLakes = fetchedUserLakes;
        return self.renderUserLakes();
      }
    });
    this.userNews.fetch({
      success: function(fetchedNews) {
        self.userNews = fetchedNews;
        return self.renderUserNews();
      }
    });
    navigator.geolocation.getCurrentPosition(successCallback, errorCallback);
    this.allLakes.fetch({
      success: function(fetchedLakes) {
        self.nearbyLakes = fetchedLakes;
        return self.renderNearbyLakes();
      }
    });
    return this;
  },
  renderUserLakes: function() {
    _.each(this.userLakes.models, (function(item) {
      var lakeItemView;
      lakeItemView = new window.WiserWater.LakeItemView({
        model: item
      });
      return $("#pinnedLakes").append(lakeItemView.render().el);
    }), this);
    return $("#pinnedLakes").listview('refresh');
  },
  renderNearbyLakes: function() {
    console.debug("rendering nearby lakes");
    console.debug(this.currentPositionLongitude);
    _.each(this.nearbyLakes.models, (function(item) {
      var lakeItemView;
      console.debug(item.getLocation().lon);
      console.debug(item.getLocation().lat);
      if ((item.getLocation().lon > 23 && item.getLocation().lon < 25) && (item.getLocation().lat > 60 && item.getLocation().lat < 61)) {
        console.debug("IN");
        lakeItemView = new window.WiserWater.LakeItemView({
          model: item
        });
        return $("#nearbyLakes").append(lakeItemView.render().el);
      }
    }), this);
    return $("#nearbyLakes").listview('refresh');
  },
  renderUserNews: function() {
    var item, newsItemView;
    item = this.userNews.models[0];
    newsItemView = new window.WiserWater.NewsItemView({
      model: item
    });
    return $("#newsStream").append(newsItemView.render().el);
  },
  onLakeClick: function(args) {
    console.debug("clicked on a lake");
    args.preventDefault();
    console.debug(args);
    return WiserWater.app.renderLake();
  }
}, successCallback = function(position) {
  console.debug("in successCallback");
  console.debug(position);
  _this.currentPositionLon = position.coords.longitude;
  _this.currentPositionLat = position.coords.latitude;
  console.debug(_this.currentPositionLon);
  return console.debug(_this.currentPositionLat);
}, errorCallback = function(error) {
  console.debug("in errorcallback");
  return console.debug(error);
});
